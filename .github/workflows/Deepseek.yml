name: Build and Release Kernel Deepseek Test

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEBIAN_FRONTEND: noninteractive
  ROOT_DIR_PREFIX: "OP11r-A15"
  BRANCH: "android12-5.10"
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
jobs:
  build-release:
    runs-on: self-hosted
    timeout-minutes: 60
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            python3-pip \
            curl \
            git \
            zip \
            unzip \
            gcc \
            g++ \
            make \
            ninja-build \
            file \
            bc \
            bison \
            flex \
            libssl-dev \
            libelf-dev \
            wget \
            build-essential \
            python3-dev \
            python3-setuptools \
            rsync \
            ccache \
            cmake

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 2G

      - name: Install Latest Pahole
        run: |
          sudo apt-get remove --purge -y dwarves
          sudo apt-get install -y git build-essential libdw-dev zlib1g-dev
          git clone --recurse-submodules https://git.kernel.org/pub/scm/devel/pahole/pahole.git
          cd pahole
          cmake .
          sudo make install

      - name: Setup Python and Repo Tool
        run: |
          mkdir -p ~/.bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+x ~/.bin/repo
          echo "$HOME/.bin" >> $GITHUB_PATH
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Configure Build Directory
        run: |
          ROOT_DIR="${ROOT_DIR_PREFIX}-$(date +'%Y-%m-%d-%I-%M-%p')-release"
          echo "ROOT_DIR=${ROOT_DIR}" >> $GITHUB_ENV
          mkdir -p "builds/${ROOT_DIR}"
          cd "builds/${ROOT_DIR}"

      - name: Clone Required Repositories
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          git clone https://github.com/TheWildJames/AnyKernel3.git -b $BRANCH
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android12-5.10
          git clone https://github.com/TheWildJames/kernel_patches.git

      - name: Setup Kernel Source
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          mkdir -p kernel_platform/oneplus12_v
          cd kernel_platform/oneplus12_v
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/sm8475 -m oneplus_11r_v.xml --depth=1
          repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags
          rm -rf ./kernel_platform/common/android/abi_gki_protected_exports_*

      - name: Setup KernelSU
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform
        run: |
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          cd KernelSU-Next/kernel
          sed -i 's/ccflags-y += -DKSU_VERSION=16/ccflags-y += -DKSU_VERSION=12335/' ./Makefile

      - name: Set LTO to THIN
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform
        run: |
          sed -i 's/CONFIG_LTO=n/CONFIG_LTO=y/' "./common/arch/arm64/configs/gki_defconfig"
          sed -i 's/CONFIG_LTO_CLANG_FULL=y/CONFIG_LTO_CLANG_THIN=y/' "./common/arch/arm64/configs/gki_defconfig"
          sed -i 's/CONFIG_LTO_CLANG_NONE=y/CONFIG_LTO_CLANG_THIN=y/' "./common/arch/arm64/configs/gki_defconfig"

      - name: Setup SUSFS
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v
        run: |
          mkdir -p ./common/fs
          mkdir -p ./common/include/linux
          
          cp ../../../susfs4ksu/kernel_patches/fs/susfs.c ./common/fs/
          cp ../../../susfs4ksu/kernel_patches/include/linux/susfs.h ./common/include/linux/
          cp ../../../susfs4ksu/kernel_patches/include/linux/susfs_def.h ./common/include/linux/
          
          cp ../../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU-Next/
          cp ../../../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android12-5.10.patch ./common/
          cp ../../../kernel_patches/69_hide_stuff.patch ./common/
          cp ../../../kernel_patches/selinux.c_fix.patch ./
          cp ../../../kernel_patches/apk_sign.c_fix.patch ./
          cp ../../../kernel_patches/Makefile_fix.patch ./
          cp ../../../kernel_patches/core_hook.c_fix.patch ./
          
          cd KernelSU-Next
          patch -p1 < 10_enable_susfs_for_ksu.patch || true
          
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-android12-5.10.patch || true
          patch -p1 -F 3 < 69_hide_stuff.patch || true
          sed -i '/obj-$(CONFIG_KSU_SUSFS_SUS_SU) += sus_su.o/d' ./fs/Makefile
          
          cd ..
          patch -p1 -F 3 < selinux.c_fix.patch || true
          patch -p1 -F 3 < apk_sign.c_fix.patch || true
          patch -p1 --fuzz=3 < Makefile_fix.patch || true
          patch -p1 --fuzz=3 < core_hook.c_fix.patch || true

      - name: Configure Kernel
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v
        run: |
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          # ... (keep other CONFIG additions the same) ...
          echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig
          sed -i '2s/check_defconfig//' ./common/build.config.gki

      - name: Build Kernel
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v
        run: |
          mkdir -p out
          export PATH="/usr/lib/ccache:$PATH"
          ./oplus/build/oplus_build_kernel.sh \
            waipio \
            gki \
            --jobs=$(nproc --all) \
            --verbose_failures \
            --config=stamp \
            --user_kmi_symbol_lists=//msm-kernel:android/abi_gki_aarch64_qcom \
            --ignore_missing_projects \
            -o "$(pwd)/out"

      - name: Create ZIP Package
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          cp kernel_platform/oneplus12_v/out/dist/Image AnyKernel3/Image
          cp kernel_platform/oneplus12_v/out/dist/Image.lz4 AnyKernel3/Image.lz4
          cd AnyKernel3
          ZIP_NAME="Anykernel3-OP-A15-android14-6.1-KernelSUNext-SUSFS-$(date +'%Y-%m-%d-%H-%M-%S').zip"
          zip -r "../$ZIP_NAME" ./*
          echo "zip_name=$ZIP_NAME" >> $GITHUB_ENV

      - name: Publish Release
        run: |
          cd "./builds/${{ env.ROOT_DIR }}"
          ZIP_FILE_PATH="${GITHUB_WORKSPACE}/builds/${{ env.ROOT_DIR }}/${{ env.zip_name }}"
          gh release create "v${{ env.BRANCH }}-$(date +'%Y.%m.%d-%H%M%S')" "$ZIP_FILE_PATH" \
            --repo "$GITHUB_REPOSITORY" \
            --title "OP12 A15 ${{ env.BRANCH }} With KernelSU & SUSFS" \
            --notes "Kernel release" \
            --prerelease
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Build Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs
          path: |
            builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/out/*.log
            builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/**/*.rej
          retention-days: 5
